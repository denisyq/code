#服务器端涉及方面
---
##首先，服务端开发涉及到的东西比较多：
-操作系统
操作系统现在的情况是三分天下：unix、linux、windows。建议学习linux，主要是掌握基本的服务器管理与配置命令，能够编写shell脚本进行部署以及自动化管理等。
-服务器
Nginx、Apache都是常见的服务器。这两个服务器各有各的特点，我这里不能说哪个一定比哪个好。网上也有很多对这两个服务性能的对比与讨论可供参考。
-数据库
数据库有Mysql、Oracle、SQL server等这些都是关系型数据库，还有非关系型数据库：memcached、mongodb、redis等。建议了解各种数据库的特点，根据自己的业务模型，选择最优的搭配。
-开发语言
开发语言有很多python、php、perl、c++、java...基本上大部分语言都可以开发后台。每种语言都有自己的特点与框架，像这些语言都有很多公司用。
据我所知，使用python作为后台开发的有知乎、豆瓣、quora，而且现在大部分的新型互联网公司都倾向于使用python作为后台的开发语言。
python作为后台开发主要是可以实现快速的开发，同时可供选择的开发框架也有很多，比如：flask、django、tornado、bottle等。建议了解这些框架的特点。
-TCP/IP协议
了解基本的协议：HTTP、DNS、SMTP、SNMP。。。
-数据交换格式
protobuf、json、xml。。。
这里面最节约空间与速度最快的是protobuf，一般使用json就好了，json的在空间与速度上都优于xml。如果是特别追求节约空间与速度就使用protobuf。


##主流的app的服务端：
应该没有所谓的主流吧 - - 我只知道instagram使用了nginx、django、Gunicorn。。。
像instagram这么多用户的应用后台绝对不是这么简单。What Powers Instagram: Hundreds of Instances, Dozens of Technologies这篇文章是他们公布的架构，可供参考，另外网上也有一些逼人翻译与分析的文章。

##最后说下我的用法：
目前使用nginx+uWSGI+flask
flask是python的一个轻量级框架，上面有介绍。
nginx主要是处理静态的请求，动态的交给uWSGI。
uWSGI是一个服务器，使用它可以很方便的部署python应用，而且处理速度也比较快。
网上可以找到很多关于nginx+uWSGI+flask的配置介绍

-------------------------------------------------------------------
#服务器框架选择
---
1. Java普遍性能优于绝大多数解释语言，且已逼近C++。JIT带来的性能上的跨越以及近些年Java的快速进步本来就是不可忽视的。加之Java程序员数量庞大，做起web的多也就不意外了。

2. Django在Python上的性能表现一直就不咋地。别说Java，就是Python自家框架里都有一大堆能碾压Django的存在。相比其它大多数Python Web框架，Django提供了一整套的解决方案，工程化和严谨程度有很大优势。

3. Node.JS的并发能力不可忽视，然而这是针对如PHP、Python、RoR而言的。

4. Java性能虽好，方便程度及学习成本而言是完全干不过Python、Node、RoR的。这就是为什么别人说Java太重。小公司没几个人做却要选择工作量大的Java显然不如用一个人就能撑到底的语言和框架来干活；大公司啥都不缺就缺人类型的自然要用会的人多的语言。此外多快的框架都扛不住开发者乱搞。

5. 并发性能对于小型应用而言并不重要。一台服务器挂5个django进程每秒钟也能处理个上千并发请求（如果不用渲染模板还能再多点），而上千请求每秒意味着……这个网站的收入完全可以支撑好几台服务器了。

6. 计算性能并不特别重要，事实上web框架的逻辑里几乎没有重计算，更多的时间其实花在了IO和字符串处理上。

7. 目前已经有不止一款C和C++构建的web框架，且性能十分优秀，但是配套设施不完整，写起来难度也远大于Java，更不用说Python、Ruby这种以易写易读为卖点的语言，因此应用面很小。

8. Erlang并发效率令人颤抖，也有很好的web框架，然而函数式语言在web领域普及度目前并不高，招人也不易，你会选择么？

9. PHP尽管性能不咋地，库不咋地，语言设计不咋地（嗯仍然是最好的语言），但是会的人多到爆炸，招人也便宜也好找，所以说才会有hhvm这样的东西出现：找一组高端选手改造解释器，比让全员都会新语言成本低多了。
---

#所以良好的技术广度会使程序员走的更远。那么作为程序员的我们需要学习哪些知识呢？
1. 计算机基础:操作系统,编辑原理,数据结构,算法设计与分析，这些知识可以有助于我们了解计算机软件基本的运行原理和运行效率。
2. 应用运行环境:linux,apache/nginx web服务器,mysql/oracle等db,redis/memcache缓存等,hadoop,mango等nosql数据存储
3. 开发语言:Java语法,JVM,系统框架(spring系列, struts系列,ibatis/hibernate),各种封装工具类:apache下的commons系列,常用场景开发工具包,HttpClient,JSON包,XML解析类,日志输出工具Log4j等;
4. 开发环境和项目管理:eclipse/idea等,maven/ant项目管理,svn/git等代码库等
5. 设计思想:面向对象设计思想,OOP七原则,测试驱动开发等

#华泰证券职位要求
1.  大数据岗位职责：
主要负责大数据相关平台建设。包括大数据系统架构设计、系统设计、核心代码开发；架构设计和技术方向确认，方案审核和核心framework研发；架构设计方案，技术选型方案和POC，大数据相关平台上线等

任职要求：
1、 计算机、电子工程等相关专业硕士及以上学历，3年以上互联网行业的Hadoop平台的架构设计和开发经验；
2、 具有深厚的分布式系统或数据库系统的理论基础，熟悉分布式计算系统的工作机制；
3、 对基于Hadoop的大数据生态体系有深入认识，具备相关产品（Hadoop、Hive、Hbase、Pig等）项目应用研发经验，有MapReduce 程序的实战开发经验，具备根据特定环境灵活利用开源技术实现大数据应用的经验和能力，要阅读过Hadoop核心代码；
4、 熟悉Storm、Spark等并行/流式处理系统的技术和原理；
5、 能力和主动性强，具有钻研精神，充满激情，乐于接受挑战；
6、 曾设计开发过实际上线的大数据系统者优先。
简历接收：fanjian@htsc.com

===
岗位名称：高级研发经理（行情中心方向）
招聘人数：1人
工作地点：南京

岗位职责：
1、参与项目技术方案的制定和实施；
2、参与系统架构设计；
3、按照产品规划，完成研发工作任务分解、进度跟踪和风险控制；
4、完成核心模块编码，解决项目中的技术难点；

任职要求：
1、全日制硕士以上学历，从事分布式系统工作3年以上；
2.精通java开发语言，有面向对象设计的能力
3、有spring、netty 等开发框架经验；
4、具有一定的算法、数据结构基础，具有独立解决问题的能力
5、熟悉分布式系统工作机制，了解常见的分布式算法
6、有较强的学习能力和对新技术的追求精神
7、有开源的消息中间件（Kafa、redis、zookeeper）经验者优先
8.有大数据(hbase,hadoop,mapreduce)相关开发经验优先

职级要求：一般人员即可，低职级（SA/A）
行业背景要求：有金融行业经验者优先，无行业经验也可
简历接收：fanjian@htsc.com

===
华泰证券招聘高级研发经理（日志中心方向）（南京）
岗位职责：

    参与数据分析运营类产品开发、设计和项目上线；
    负责技术难题攻关，重构系统，确保系统质量及稳定性；
    能够在团队中完成Code Review的任务，确保相关代码的有效性和正确性，并能够通过Code Review提供相关性能以及安全的建议。

任职要求：
1. 2年左右hadoop开发经验，计算机或相关专业硕士以上学历；
2. 精通Java编程，熟悉J2EE、MVC架构等相关技术，熟练掌握面向对象的程序设计方法，熟悉或了解各种数据结构和算法模型；
3. 熟悉Hadoop、HDFS、spark、Flume、kafka、Hive、Hbase等开源技术；
4. 熟悉Oracle、MySql数据库编程，能熟练编写SQL语句；
5. 有源码研究爱好者优先；
6. 能承受一定的工作压力，有责任心、上进心，具备良好的自学能力和独立解决问题能力。

职级要求：一般人员即可，低职级（SA/A）
行业背景要求：完全不需要金融行业经验
简历接收：fanjian@htsc.com

